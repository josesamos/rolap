[{"path":"https://josesamos.github.io/rolap/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 rolap authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://josesamos.github.io/rolap/articles/dm.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Star databases and RDBMS through the dm and rolap packages","text":"main objective document show access transactional data RDBMS (Relational Database Management Systems) store star database generated another relational database. Access databases done dm package. transformations carried using rolap package. Additionally, multidimensional design case solved using star databases two granularities. First, initial transactional data presented. following shows implementation star databases. Finally, ends conclusions.","code":""},{"path":"https://josesamos.github.io/rolap/articles/dm.html","id":"transactional-data","dir":"Articles","previous_headings":"","what":"Transactional data","title":"Star databases and RDBMS through the dm and rolap packages","text":"build dataset transactional data Czech debit card company specialising payments gas stations called CCS, publicly available RDBMS. First, make connection following instructions offer, shown below1. Next, connection, can obtain dm object, taking definition keys database. Using following function can display database tables fields. can access tables part list. access transactions table can see data, data transactions_1k table hat related tables. hand, yearmonth table contains historical customer data, use example. Therefore, generate new dm object selecting tables going use relating table transactions_1k rest tables. operations performed . resulting database schema shown . starting point rolap package define transformations obtain star database flat table. generate flat table tibble database tables can use functions offered dm package, shown . already transactions_ft variable flat table transactional data going use. list fields table, can see fields name several tables now postfixed name table came (Segment.customers Segment.gasstations). Since already result need, can disconnect database.","code":"library(RMariaDB)  ccs_db <- RMariaDB::dbConnect(   RMariaDB::MariaDB(),   username = \"guest\",   password = \"relational\",   dbname = \"ccs\",   host = \"relational.fit.cvut.cz\" ) library(dm)  ccs_dm <- dm::dm_from_con(ccs_db, learn_keys = TRUE) ccs_dm |>   dm::dm_draw(view_type = \"all\") ccs_dm$transactions #> # Source:   table<`ccs`.`transactions`> [0 x 8] #> # Database: mysql  [guest@relational.fit.cvut.cz:NA/ccs] #> # ℹ 8 variables: Date <date>, Time <time>, CustomerID <int>, CardID <int>, #> #   GasStationID <int>, ProductID <int>, Amount <int>, Price <dbl> ccs_sel_dm <-   ccs_dm[c('transactions_1k', 'customers', 'gasstations', 'products')] |>   dm::dm_add_fk(transactions_1k, CustomerID, customers) |>   dm::dm_add_fk(transactions_1k, GasStationID, gasstations) |>   dm::dm_add_fk(transactions_1k, ProductID, products) ccs_sel_dm |>   dm::dm_draw(view_type = \"all\") transactions_ft <- ccs_sel_dm |>   dm::dm_flatten_to_tbl(transactions_1k, .recursive = TRUE) |>   dm::collect()  class(transactions_ft) #> [1] \"tbl_df\"     \"tbl\"        \"data.frame\" nrow(transactions_ft) #> [1] 1000 dput(colnames(transactions_ft)) #> c(\"TransactionID\", \"Date\", \"Time\", \"CustomerID\", \"CardID\", \"GasStationID\",  #> \"ProductID\", \"Amount\", \"Price\", \"Segment.customers\", \"Currency\",  #> \"ChainID\", \"Country\", \"Segment.gasstations\", \"Description\") DBI::dbDisconnect(ccs_db)"},{"path":"https://josesamos.github.io/rolap/articles/dm.html","id":"star-databases","dir":"Articles","previous_headings":"","what":"Star databases","title":"Star databases and RDBMS through the dm and rolap packages","text":"data flat table (variable transactions_ft), going carry multidimensional design. start exploring part data get know better.","code":""},{"path":"https://josesamos.github.io/rolap/articles/dm.html","id":"data-exploration","dir":"Articles","previous_headings":"Star databases","what":"Data exploration","title":"Star databases and RDBMS through the dm and rolap packages","text":"transactions_1k table TransactionID field primary key. check field surrogate key, autonumber, shown . expected, transaction correspond payment customer, means card, one several products gas station specific moment. can verify true obtaining number distinct instances combinations attributes interest. view results, deduce customer paid time one card: possible time given minutes. adding product combination attributes includes card, observed rows table obtained. view , consider : transaction identified card instant time payment made. transaction can include several products, row transaction line defined transaction product. nothing remarkable rest data.","code":"length(unique(transactions_ft$TransactionID)) #> [1] 1000 min(transactions_ft$TransactionID) #> [1] 1 max(transactions_ft$TransactionID) #> [1] 1000 nrow(unique(transactions_ft[, c(\"Date\", \"Time\", \"CustomerID\")])) #> [1] 919 nrow(unique(transactions_ft[, c(\"Date\", \"Time\", \"CardID\")])) #> [1] 921 nrow(unique(transactions_ft[, c(\"Date\", \"Time\", \"CardID\", \"ProductID\")])) #> [1] 1000"},{"path":"https://josesamos.github.io/rolap/articles/dm.html","id":"design-with-the-finest-possible-granularity","dir":"Articles","previous_headings":"Star databases","what":"Design with the finest possible granularity","title":"Star databases and RDBMS through the dm and rolap packages","text":"First, going make design finest granularity.","code":""},{"path":"https://josesamos.github.io/rolap/articles/dm.html","id":"star-schema","dir":"Articles","previous_headings":"Star databases > Design with the finest possible granularity","what":"Star schema","title":"Star databases and RDBMS through the dm and rolap packages","text":"define star schema distributing flat table attributes facts dimensions. remarkable thing definition facts correspond transaction line, line corresponding product transaction. hand, transaction identified attributes Date, Time CardID. Since concepts already represented dimensions, surrogate key (foreign key facts) enough represent transaction, Transaction degenerate dimension (dimension table needed, foreign key facts enough). Subsequently, dimensions enriched attributes available transactional system. case, going leave .","code":"library(rolap)  s_finest <- rolap::star_schema() |>   rolap::define_facts(name = \"Transaction Line\",     measures = c(\"Amount\", \"Price\")) |>   rolap::define_dimension(name = \"Transaction\",     attributes = c(\"Date\", \"Time\", \"CardID\")) |>   rolap::define_dimension(name = \"Who\",     attributes = c(\"CardID\", \"CustomerID\", \"Segment.customers\",                    \"Currency\")) |>   rolap::define_dimension(name = \"Where\",     attributes = c(\"GasStationID\", \"ChainID\", \"Country\",                    \"Segment.gasstations\")) |>   rolap::define_dimension(name = \"When\",     attributes = c(\"Date\", \"Time\")) |>   rolap::define_dimension(name = \"What\",     attributes = c(\"Description\"))"},{"path":"https://josesamos.github.io/rolap/articles/dm.html","id":"star-database","dir":"Articles","previous_headings":"Star databases > Design with the finest possible granularity","what":"Star database","title":"Star databases and RDBMS through the dm and rolap packages","text":"star schema flat table, obtain star database tables dimensions facts. can transform database renaming measures facts /attributes dimensions also, going work RDBMS, transforming snake case style.","code":"db_finest <- rolap::star_database(s_finest, transactions_ft) db_finest <- db_finest |>   rolap::snake_case() |>   rolap::set_dimension_attribute_names(     name = \"who\",     attributes = c(       \"card\",       \"customer\",       \"segment\",       \"currency\"     )   ) |>   rolap::set_dimension_attribute_names(     name = \"where\",     attributes = c(       \"gas_station\",       \"chain\",       \"country\",       \"segment\"     )   ) |>   rolap::set_dimension_attribute_names(     name = \"what\",     attributes = c(       \"product\"     )   )"},{"path":"https://josesamos.github.io/rolap/articles/dm.html","id":"presentation-of-the-result","dir":"Articles","previous_headings":"Star databases > Design with the finest possible granularity","what":"Presentation of the result","title":"Star databases and RDBMS through the dm and rolap packages","text":"easier access result tables, going transform list tibble objects show names number instances. represent result graphically, export star database form dm object. addition, select tables model: except table degenerate dimension. database schema. can seen new measure added fact table (nrow_agg), measure, row, indicates number rows original table obtained. definition facts can indicate specific name . case, row corresponds row original table, therefore, values must 1, can verified .","code":"db_tl <- db_finest |>   rolap::as_tibble_list()  names <- names(db_tl) for (i in seq_along(db_tl)){   cat(sprintf(\"name: %s, %d rows\\n\", names[i], nrow(db_tl[[i]]))) } #> name: transaction, 921 rows #> name: who, 902 rows #> name: where, 437 rows #> name: when, 748 rows #> name: what, 27 rows #> name: transaction_line, 1000 rows db_dm <- db_finest |>   rolap::as_dm_class(pk_facts = FALSE)  db_finest_dm <-   db_dm[c('transaction_line', 'who', 'where', 'when', 'what')] db_finest_dm |>    dm::dm_draw(view_type = \"all\") max(db_tl[['transaction_line']]$nrow_agg) #> [1] 1 sum(db_tl[['transaction_line']]$nrow_agg) #> [1] 1000"},{"path":"https://josesamos.github.io/rolap/articles/dm.html","id":"store-tables-in-a-relational-database","dir":"Articles","previous_headings":"Star databases > Design with the finest possible granularity","what":"Store tables in a relational database","title":"Star databases and RDBMS through the dm and rolap packages","text":"star database tables dm object, exporting RDBMS immediate. example , local SQLite database used. dm works RDBMS supported DBI.","code":"my_db <- DBI::dbConnect(RSQLite::SQLite()) my_db_finest_dm <- dm::copy_dm_to(my_db, db_finest_dm) my_db_finest_dm #> ── Table source ──────────────────────────────────────────────────────────────── #> src:  sqlite 3.41.2 [] #> ── Metadata ──────────────────────────────────────────────────────────────────── #> Tables: `transaction_line`, `who`, `where`, `when`, `what` #> Columns: 23 #> Primary keys: 4 #> Foreign keys: 4 DBI::dbDisconnect(my_db)"},{"path":"https://josesamos.github.io/rolap/articles/dm.html","id":"design-with-a-summary-of-the-data","dir":"Articles","previous_headings":"Star databases","what":"Design with a summary of the data","title":"Star databases and RDBMS through the dm and rolap packages","text":"Next going perform multidimensional design coarser granularity. Let’s assume interested hour transaction occurs, specific minute: going add Hour field obtained Time field.","code":"transactions_ft <- transactions_ft |>    dplyr::mutate(Hour = format(as.POSIXct(Time), format = \"%H\"))"},{"path":"https://josesamos.github.io/rolap/articles/dm.html","id":"star-schema-1","dir":"Articles","previous_headings":"Star databases > Design with a summary of the data","what":"Star schema","title":"Star databases and RDBMS through the dm and rolap packages","text":"design star schema, dimension exclusively select attributes consider necessary. assumed interested individual transactions summary ; neither particular data clients, associated segment currency. Finally, interested gas stations either, chain belong rest dimension attributes. measure can associated specific aggregation function, default sum , case, can considered adequate since adding group data meaning measures preserved (understanding Price total amount sale operation). Otherwise, advisable define measures obtained available principle fulfilled. Finally, indicate time specific name assigned measure number rows added: Transactions.","code":"s_summary <- rolap::star_schema() |>   rolap::define_facts(name = \"Transaction Summary\",     measures = c(\"Amount\", \"Price\"),     nrow_agg = \"Transactions\") |>   rolap::define_dimension(name = \"Who\",     attributes = c(\"Segment.customers\",                    \"Currency\")) |>   rolap::define_dimension(name = \"Where\",     attributes = c(\"ChainID\", \"Country\",                    \"Segment.gasstations\")) |>   rolap::define_dimension(name = \"When\",     attributes = c(\"Date\", \"Hour\")) |>   rolap::define_dimension(name = \"What\",     attributes = c(\"Description\"))"},{"path":"https://josesamos.github.io/rolap/articles/dm.html","id":"star-database-1","dir":"Articles","previous_headings":"Star databases > Design with a summary of the data","what":"Star database","title":"Star databases and RDBMS through the dm and rolap packages","text":", star schema flat table, obtain star database tables dimensions facts. also transform names dimension attributes. Finally, present result obtained showing names number rows tables. check number rows added matches total number rows initial flat table. also show graphic representation. Tables can stored directly RDBMS, just done .","code":"db_summary <- rolap::star_database(s_summary, transactions_ft) |>   rolap::snake_case() |>   rolap::set_dimension_attribute_names(     name = \"who\",     attributes = c(       \"segment\",       \"currency\"     )   ) |>   rolap::set_dimension_attribute_names(     name = \"where\",     attributes = c(       \"chain\",       \"country\",       \"segment\"     )   ) |>   rolap::set_dimension_attribute_names(     name = \"what\",     attributes = c(       \"product\"     )   ) db_tl <- db_summary |>   rolap::as_tibble_list()  names <- names(db_tl) for (i in seq_along(db_tl)){   cat(sprintf(\"name: %s, %d rows\\n\", names[i], nrow(db_tl[[i]]))) } #> name: who, 6 rows #> name: where, 33 rows #> name: when, 61 rows #> name: what, 27 rows #> name: transaction_summary, 777 rows  sum(db_tl[['transaction_summary']]$transactions) #> [1] 1000 db_summary_dm <- db_summary |>   rolap::as_dm_class(pk_facts = FALSE)  db_summary_dm |>    dm::dm_draw(view_type = \"all\")"},{"path":"https://josesamos.github.io/rolap/articles/dm.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Star databases and RDBMS through the dm and rolap packages","text":"document started transactional data RDBMS , dm rolap packages, obtained two star databases also RDBMS. dm package facilitates access RDBMS, rolap package supports definition necessary transformations context. initial data schema close star schema although, explained design section, conceptually different (particularly concepts transaction transaction line). simple structure schema facilitated process obtaining starting flat table work rolap package.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Basics and getting started with the rolap package","text":"multidimensional data model defined 1990s aim supporting data analysis. Data multidimensional systems obtained operational systems transformed adapt new structure. Transformations can carried using professional ETL (Extract, Transform Load) tools. Recently, tools aimed end users emerged, also aimed performing transformation operations. tools useful carry transformation process, provide development environment define transformation operations general way. Frequently, operations performed aim transform flat table (data comes operational systems) ROLAP (Relational -Line Analytical Processing) star database, made fact dimension tables, implements multidimensional system. tools mentioned , transformation can carried , requires lot work. goal rolap define transformations allow easily obtain ROLAP star databases, composed fact dimension tables, flat tables able export various formats used OLAP query tools. rest document structured follows: First, basic concepts dimensional modelling star databases summarized. following illustrative example package works, show usage features offers. Finally, document ends conclusions bibliography.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"dimensional-modelling-and-star-databases","dir":"Articles","previous_headings":"","what":"Dimensional modelling and star databases","title":"Basics and getting started with the rolap package","text":"content section summary based mainly Adamson (2010) Kimball Ross (2013). intended present fundamental concepts area relevant understand functionality, naming use rolap package.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"dimensional-modelling","dir":"Articles","previous_headings":"Dimensional modelling and star databases","what":"Dimensional modelling","title":"Basics and getting started with the rolap package","text":"Dimensional modelling aims obtain simple data models. Simplicity sought two reasons: decision-makers can easily understand data, also can easily queried. dimensional modelling, analysis business process performed modelling measured. measures called facts, descriptors context facts dimensions. Facts numerical data, contain measures, decision makers want see various levels detail, defined dimensions. numerical data measure facts (tools consider way). dimensional modelling designer differentiate facts dimensions. criteria considered distinguish , example: can defined different levels detail fact. quantitative takes continuous values, fact. provides context dimension. Sometimes measures associated business process, simply recorded combination dimensions occurred. situation often called factless facts, Jensen, Pedersen, Thomsen (2010) prefer call measureless facts. case, including measures available, measure can considered represents number times combination dimension values occurs.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"dimensions-and-dimension-attributes","dir":"Articles","previous_headings":"Dimensional modelling and star databases > Dimensional modelling","what":"Dimensions and dimension attributes","title":"Basics and getting started with the rolap package","text":"Attributes considered designer dimensions can grouped taking account natural affinities . particular, can grouped describe “, , , , ” associated modelled business process. Two attributes share natural affinity related one context. relationships determined transactions activities, can occur multiple contexts, occurs, must located different dimensions. way, dimension made set naturally related dimension attributes describe context facts. Dimensions used two purposes: fact selection fact grouping desired level detail. Additionally, dimensions hierarchies levels descriptors can defined. details can found Jensen, Pedersen, Thomsen (2010). concepts used current version package.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"facts-and-measures","dir":"Articles","previous_headings":"Dimensional modelling and star databases > Dimensional modelling","what":"Facts and measures","title":"Basics and getting started with the rolap package","text":"Facts granularity, determined attributes dimensions considered moment. Thus, measure fact two components, numerical property formula, frequently SUM aggregation function, allows combining several values measure obtain new value measure coarser granularity (Jensen, Pedersen, Thomsen 2010). According behaviour obtain coarser granularity, three types measures distinguished: additive, semi-additive non-additive. additive measures, SUM always valid formula maintains meaning measure granularity changes. semi-additive measures, point using SUM changing level detail dimensions meaning measure changes, frequently occurs dimensions represents time measures representing inventory level. non-additive measures, values combined across dimension using SUM result obtained different meaning original measure (generally occurs ratios, percentages unit amounts unit cost unit price). useful measures additive. non-additive measures, can generally redefined additive measures.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"star-databases","dir":"Articles","previous_headings":"Dimensional modelling and star databases","what":"Star databases","title":"Basics and getting started with the rolap package","text":"Dimensional models implemented RDBMS (Relational Database Management Systems) known ROLAP (Relational -Line Analytical Processing), use table dimension called ROLAP star databases resemblance star-like structure: fact table centre dimension tables around . Thus, dimension attributes columns respective dimension tables, measures columns fact table. possible implementations RDBMS normalize dimensions known ROLAP snowflake databases. details can found Jensen, Pedersen, Thomsen (2010). considered package.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"dimension-tables","dir":"Articles","previous_headings":"Dimensional modelling and star databases > Star databases","what":"Dimension tables","title":"Basics and getting started with the rolap package","text":"Dimension tables contain context associated business process measures. Although can contain type data, numerical data generally used dimension attributes end user query tools consider numeric data measure. Dimension attributes NULL value source problems querying since DBMS query tools sometimes handle inconsistently, result depends product. recommended avoid use NULL replace descriptive text. case dates, recommended replace NULL values arbitrary date far future.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"surrogate-keys","dir":"Articles","previous_headings":"Dimensional modelling and star databases > Star databases > Dimension tables","what":"Surrogate keys","title":"Basics and getting started with the rolap package","text":"dimension table contains dimension attributes also surrogate key column. column unique identifier intrinsic meaning: generally integer primary key dimension table. Adamson (2010) surrogate keys easily identifiable suffix “_key” column name (criterion also applied rolap package). Dimension tables also contain natural key columns uniquely identify associated entities operational system. separation surrogate keys natural keys allows star schema store changes dimensions. Therefore, use surrogate keys dimensions solution SCD (Slowly Changing Dimensions) problem.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"special-dimensions","dir":"Articles","previous_headings":"Dimensional modelling and star databases > Star databases > Dimension tables","what":"Special dimensions","title":"Basics and getting started with the rolap package","text":"cases, sake simplicity, helpful create table contains dimension attributes natural affinities , generally low-cardinality flags indicators. result known junk dimension. require special support, designer’s define . Sometimes dimension attributes left fact table, usually transaction identifiers. considered primary key dimension associated table, reason known degenerate dimension. package, dimension represented table, degenerate dimension table single attribute (example, transaction identifier). dimension table subsequently deleted, degenerate dimension. Associated multiple star databases conformed dimensions presented section Conformed dimensions.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"fact-table","dir":"Articles","previous_headings":"Dimensional modelling and star databases > Star databases","what":"Fact table","title":"Basics and getting started with the rolap package","text":"centre star database fact table. addition containing measures, fact table includes foreign keys refer surrogate keys dimension tables.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"primary-key","dir":"Articles","previous_headings":"Dimensional modelling and star databases > Star databases > Fact table","what":"Primary key","title":"Basics and getting started with the rolap package","text":"subset foreign keys (along possibly keys degenerate dimensions) considered form primary key fact table.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"grain","dir":"Articles","previous_headings":"Dimensional modelling and star databases > Star databases > Fact table","what":"Grain","title":"Basics and getting started with the rolap package","text":"subset dimensions forms primary key defines level detail stored fact table, known fact table’s grain. design process, important designer clearly define grain fact table (usually defined listing dimensions whose surrogate keys form primary key): way ensure facts stored level detail. finest grain, row fact table corresponds measures event vice versa, influenced possible reports may obtained. two facts different grains, set different fact tables.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"constellation","dir":"Articles","previous_headings":"Dimensional modelling and star databases > Star databases","what":"Constellation","title":"Basics and getting started with the rolap package","text":"frequent need several fact tables various reasons: find measures different grain. measures occur simultaneously, example, one occurs, value others vice versa. reality different business processes, one fact table dimensions common. known constellation corresponds Kimball enterprise data warehouse bus architecture.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"conformed-dimensions","dir":"Articles","previous_headings":"Dimensional modelling and star databases > Star databases","what":"Conformed dimensions","title":"Basics and getting started with the rolap package","text":"star databases share set common dimensions constellation, dimensions called conformed dimensions. several possibilities conformed dimensions, obvious form dimension tables share structure content, , identical dimensions. one considered version rolap package.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"an-illustrative-example","dir":"Articles","previous_headings":"","what":"An illustrative example","title":"Basics and getting started with the rolap package","text":"section illustrative example developed show package works.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"data-sets","dir":"Articles","previous_headings":"An illustrative example","what":"Data sets","title":"Basics and getting started with the rolap package","text":"illustrate package works use small part Deaths 122 U.S. cities - 1962-2016. 122 Cities Mortality Reporting System dataset. table , rows ft dataset shown. week city, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. Regarding data types, columns type character, imported directly tibble, without indicating specific type. initial dataset, two additional datasets, ft_num ft_age, defined transformations shown . ft_num structure data ft, data types two cause measures change. ft_age, columns cause measures removed transformed tidy table (tidyr::gather), measure numeric type removing redundant descriptions. first 15 rows ft_age. ft_num ft_age flat tables considered starting point obtain star databases example.","code":"library(rolap)  ft_num <- ft |>   dplyr::mutate(`Pneumonia and Influenza Deaths` = as.integer(`Pneumonia and Influenza Deaths`)) |>   dplyr::mutate(`All Deaths` = as.integer(`All Deaths`))  ft_age <- ft |>   dplyr::select(-`Pneumonia and Influenza Deaths`,-`All Deaths`) |>   tidyr::gather(\"Age\", \"All Deaths\", 7:11) |>   dplyr::mutate(`All Deaths` = as.integer(`All Deaths`)) |>   dplyr::mutate(Age = stringr::str_replace(Age, \" \\\\(all cause deaths\\\\)\", \"\"))"},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"dimensional-modelling-1","dir":"Articles","previous_headings":"An illustrative example","what":"Dimensional modelling","title":"Basics and getting started with the rolap package","text":"flat table, goal define attributes correspond measures facts dimensions. facts, measures aggregation functions defined. dimensions, attributes natural affinity must grouped. attribute appear definition. avoid write name attributes table, following function can form string. Thus, can copy paste name needed.","code":"dput(colnames(ft_num)) #> c(\"Year\", \"WEEK\", \"Week Ending Date\", \"REGION\", \"State\", \"City\",  #> \"Pneumonia and Influenza Deaths\", \"All Deaths\", \"<1 year (all cause deaths)\",  #> \"1-24 years (all cause deaths)\", \"25-44 years\", \"45-64 years (all cause deaths)\",  #> \"65+ years (all cause deaths)\")  dput(colnames(ft_age)) #> c(\"Year\", \"WEEK\", \"Week Ending Date\", \"REGION\", \"State\", \"City\",  #> \"Age\", \"All Deaths\")"},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"star-schema","dir":"Articles","previous_headings":"An illustrative example > Dimensional modelling","what":"Star Schema","title":"Basics and getting started with the rolap package","text":"create star_schema object using star_schema() function, shown . already empty schema, can add facts dimensions , shown sections follow.","code":"s <- star_schema()"},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"dimensions","dir":"Articles","previous_headings":"An illustrative example > Dimensional modelling","what":"Dimensions","title":"Basics and getting started with the rolap package","text":"can define dimensions variables, using dimension_schema() function define_dimension() function star_schema object, directly star_schema object , using define_dimension() function. example , result cases . advantage using variables save defining several times dimension appears several star schemes.","code":"# definition 1 when <- dimension_schema(name = \"When\",                          attributes = c(\"Year\",                                         \"WEEK\")) s_age <- star_schema() |>   define_dimension(when)  # definition 2 s_age <- star_schema() |>   define_dimension(name = \"When\",                          attributes = c(\"Year\",                                         \"WEEK\"))"},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"facts","dir":"Articles","previous_headings":"An illustrative example > Dimensional modelling","what":"Facts","title":"Basics and getting started with the rolap package","text":"completeness, facts can also defined variables directly associated star_schema object. dimensions, example , result cases . measure aggregation function associated , default SUM. Alternatively, MAX MIN functions can used. AVG used average averages total average. Instead, field called nrow_agg (alternative name can specified) always added number records added result row stored. value result SUM, value AVG function can obtained. aggregation functions needed get data granularity defined star schema, can equal coarser granularity defined flat table. example, aggregation functions explicitly defined measures default name measure corresponding number records added changed.","code":"# definition 1 mrs_cause <- fact_schema(name = \"MRS Cause\",                measures = c(\"Pneumonia and Influenza Deaths\",                             \"All Deaths\")) s_cause <- star_schema() |>   define_facts(mrs_cause)  # definition 2 s_cause <- star_schema() |>   define_facts(name = \"MRS Cause\",                measures = c(\"Pneumonia and Influenza Deaths\",                             \"All Deaths\")) s_cause <- star_schema() |>   define_facts(name = \"MRS Cause\",                measures = c(\"Pneumonia and Influenza Deaths\",                             \"All Deaths\"),                agg_functions = c(\"MAX\", \"SUM\"),                nrow_agg = \"Num\"                 )"},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"star-databases-1","dir":"Articles","previous_headings":"An illustrative example > Dimensional modelling","what":"Star databases","title":"Basics and getting started with the rolap package","text":"star_schema object flat table (tibble) contains fields appear , using star_database() function, obtain star_database object. example consider data causes. definition star schema data considered cause case shown . Next get star database. now objective database export tables used OLAP query tools. Two functions offered purpose, firstly snake_case() transform column names snake case secondly as_tibble_list() generate tibble list database tables, shown following example. tables dimensions facts obtained star database shown . can seen data fact table granularity data original flat table (number records). can seen num field fact table shows number records added get record, case always 1. Dimensions contain distinct value combinations attribute sets contain.","code":"s_cause <- star_schema() |>   define_facts(name = \"MRS Cause\",                measures = c(\"Pneumonia and Influenza Deaths\",                             \"All Deaths\"),                nrow_agg = \"Num\") |>   define_dimension(name = \"When\",                          attributes = c(\"Year\",                                         \"WEEK\",                                         \"Week Ending Date\")) |>   define_dimension(name = \"Where\",                           attributes = c(\"REGION\",                                          \"State\",                                          \"City\")) db_cause <- star_database(s_cause, ft_num) l_cause <- db_cause |>   snake_case() |>   as_tibble_list() nrow(ft_num) #> [1] 20  nrow(l_cause[[3]]) #> [1] 20"},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"rename-fact-measures-and-dimension-attributes","dir":"Articles","previous_headings":"An illustrative example > Dimensional modelling > Star databases","what":"Rename fact measures and dimension attributes","title":"Basics and getting started with the rolap package","text":"case considered necessary, desired, possible rename dimension attributes fact measures. , functions get_dimension_attribute_names() get_measure_names() available consult current names, set_dimension_attribute_names() set_measure_names() change necessary.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"constellations","dir":"Articles","previous_headings":"An illustrative example > Dimensional modelling","what":"Constellations","title":"Basics and getting started with the rolap package","text":"two star databases can define constellation.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"definition-of-star-databases","dir":"Articles","previous_headings":"An illustrative example > Dimensional modelling > Constellations","what":"Definition of star databases","title":"Basics and getting started with the rolap package","text":"effectively demonstrate functionality, going define star databases coarser granularity original flat tables; additionally going select rows flat tables. cause case shown . tables obtained result shown . Next, define star database rest operations case age groups. tables obtained result also shown . filtered data, can seen dimension tables contain necessary data star database , common dimensions, share structure.","code":"when <- dimension_schema(name = \"When\",                          attributes = c(\"Year\"))  where <- dimension_schema(name = \"Where\",                           attributes = c(\"State\",                                          \"City\")) s_cause <- star_schema() |>   define_facts(name = \"MRS Cause\",                measures = c(\"Pneumonia and Influenza Deaths\",                             \"All Deaths\")) |>   define_dimension(when) |>   define_dimension(where)  ft_num2 <- ft_num |>   dplyr::filter(Year > \"1962\") |>   dplyr::filter(City == \"Boston\" | City == \"Bridgeport\")  db_cause <- star_database(s_cause, ft_num2) |>   snake_case()  l_cause <- db_cause |>   as_tibble_list() s_age <- star_schema() |>   define_facts(name = \"MRS Age\",                measures = c(\"All Deaths\")) |>   define_dimension(when) |>   define_dimension(where) |>   define_dimension(name = \"Who\",                          attributes = c(\"Age\"))  ft_age2 <- ft_age |>   dplyr::filter(Year < \"1964\") |>   dplyr::filter(City != \"Boston\" & City != \"Bridgeport\")  db_age <- star_database(s_age, ft_age2) |>   snake_case()  l_age <- db_age |>   as_tibble_list()"},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"constellation-definition","dir":"Articles","previous_headings":"An illustrative example > Dimensional modelling > Constellations","what":"Constellation definition","title":"Basics and getting started with the rolap package","text":"Next define constellation formed two star databases. Constellation tables can also exported tibble list. tables constellation’s star databases. instances dimensions integrated tables common databases. tables can directly exported format required OLAP query tool going use.","code":"ct <- constellation(\"MRS\", list(db_cause, db_age)) lc <- ct |>   as_tibble_list()"},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"export-results","dir":"Articles","previous_headings":"An illustrative example","what":"Export results","title":"Basics and getting started with the rolap package","text":"continue working result implementation multidimensional database (star database constellation) can exported tibble list, suitable example pass data spreadsheet, object class dm, allows passing data RDBMS. Generic functions used, applicable objects classes, star_database constellation.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"tibble-list","dir":"Articles","previous_headings":"An illustrative example > Export results","what":"tibble list","title":"Basics and getting started with the rolap package","text":"following shows results obtained star_database object. Also constellation object.","code":"db_cause |>   as_tibble_list() #> $when #> # A tibble: 2 × 2 #>   when_key year  #>      <int> <chr> #> 1        1 1963  #> 2        2 1964  #>  #> $where #> # A tibble: 2 × 3 #>   where_key state city       #>       <int> <chr> <chr>      #> 1         1 CT    Bridgeport #> 2         2 MA    Boston     #>  #> $mrs_cause #> # A tibble: 4 × 5 #>   when_key where_key pneumonia_and_influenza_deaths all_deaths nrow_agg #>      <int>     <int>                          <int>      <int>    <int> #> 1        1         1                              2         46        1 #> 2        1         2                             10        276        1 #> 3        2         1                              8         45        1 #> 4        2         2                             22        569        2 ct |>   as_tibble_list() #> $when #> # A tibble: 3 × 2 #>   when_key year  #>      <int> <chr> #> 1        1 1962  #> 2        2 1963  #> 3        3 1964  #>  #> $where #> # A tibble: 4 × 3 #>   where_key state city       #>       <int> <chr> <chr>      #> 1         1 CT    Bridgeport #> 2         2 CT    Hartford   #> 3         3 MA    Boston     #> 4         4 MA    Cambridge  #>  #> $who #> # A tibble: 5 × 2 #>   who_key age         #>     <int> <chr>       #> 1       1 1-24 years  #> 2       2 25-44 years #> 3       3 45-64 years #> 4       4 65+ years   #> 5       5 <1 year     #>  #> $mrs_cause #> # A tibble: 4 × 5 #>   when_key where_key pneumonia_and_influenza_deaths all_deaths nrow_agg #>      <int>     <int>                          <int>      <int>    <int> #> 1        2         1                              2         46        1 #> 2        2         3                             10        276        1 #> 3        3         1                              8         45        1 #> 4        3         3                             22        569        2 #>  #> $mrs_age #> # A tibble: 15 × 5 #>    when_key where_key who_key all_deaths nrow_agg #>       <int>     <int>   <int>      <int>    <int> #>  1        1         2       1          2        2 #>  2        1         2       2          3        2 #>  3        1         2       3         35        2 #>  4        1         2       4         54        2 #>  5        1         2       5         10        2 #>  6        1         4       1          0        1 #>  7        1         4       2          2        1 #>  8        1         4       3          7        1 #>  9        1         4       4         29        1 #> 10        1         4       5          1        1 #> 11        2         2       1          5        3 #> 12        2         2       2         13        3 #> 13        2         2       3         51        3 #> 14        2         2       4        107        3 #> 15        2         2       5         16        3"},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"dm-object","dir":"Articles","previous_headings":"An illustrative example > Export results","what":"dm object","title":"Basics and getting started with the rolap package","text":"dm package allows link tables implemented using tibble class R tables RDBMS. following example shows transformation star_database object object class dm. Also constellation object. example, dm class object can used represent constellation tables, ’s shown following (can also used store DBMS). example , local SQLite database used demonstrate store model database. dm works RDBMS supported DBI.","code":"# star database db_cause_dm <- db_cause |>   as_dm_class() class(db_cause_dm) #> [1] \"dm\" db_cause_dm #> ── Metadata ──────────────────────────────────────────────────────────────────── #> Tables: `when`, `where`, `mrs_cause` #> Columns: 10 #> Primary keys: 3 #> Foreign keys: 2 # constellation ct_dm <- ct |>   as_dm_class(pk_facts = TRUE) class(ct_dm) #> [1] \"dm\" ct_dm #> ── Metadata ──────────────────────────────────────────────────────────────────── #> Tables: `when`, `where`, `who`, `mrs_cause`, `mrs_age` #> Columns: 17 #> Primary keys: 5 #> Foreign keys: 5 ct_dm |>    dm::dm_draw(rankdir = \"LR\", view_type = \"all\") db <- DBI::dbConnect(RSQLite::SQLite()) ct_dm_db <- dm::copy_dm_to(db, ct_dm) ct_dm_db #> ── Table source ──────────────────────────────────────────────────────────────── #> src:  sqlite 3.41.2 [] #> ── Metadata ──────────────────────────────────────────────────────────────────── #> Tables: `when`, `where`, `who`, `mrs_cause`, `mrs_age` #> Columns: 17 #> Primary keys: 5 #> Foreign keys: 5 DBI::dbDisconnect(db)"},{"path":"https://josesamos.github.io/rolap/articles/rolap.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Basics and getting started with the rolap package","text":"rolap package offers set operations allow us transform flat tables star databases. several star databases can define constellation conformed dimensions. Operations designed intuitive easy use. result greatly facilitates data transformation process exposed situation. implementation multidimensional database obtained can exported work multidimensional analysis tools spreadsheets RDBMS.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/articles/rpd.html","id":"role-playing-and-role-dimensions","dir":"Articles","previous_headings":"","what":"Role-playing and role dimensions","title":"Definition of Role-Playing and Role Dimensions","text":"single dimension can referenced multiple times fact table, reference linked different conceptual role. separate dimension views called role dimensions common dimension called role-playing dimension. Depending OLAP (-Line Analytical Processing) query system use, may interested single physical table defining views (one view role) different physical table role. rolap package tries facilitate operations achieve alternative decide implement. document shows means example possibilities offered package context. First, star database, implementing constellation.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rpd.html","id":"a-star-database","dir":"Articles","previous_headings":"","what":"A star database","title":"Definition of Role-Playing and Role Dimensions","text":"First , going present starting data, define star schema obtain star database. Next, see different possibilities role-playing dimension roles.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rpd.html","id":"flat-table-with-the-initial-data","dir":"Articles","previous_headings":"A star database","what":"Flat table with the initial data","title":"Definition of Role-Playing and Role Dimensions","text":"use dataset based Deaths 122 U.S. cities - 1962-2016. 122 Cities Mortality Reporting System dataset. Two additional dates generated, present original dataset. selected small dataset result can easily appreciated. Several columns time information added justified define time dimension can play several roles.","code":""},{"path":"https://josesamos.github.io/rolap/articles/rpd.html","id":"star-schema","dir":"Articles","previous_headings":"A star database","what":"Star schema","title":"Definition of Role-Playing and Role Dimensions","text":"define schema, get table columns shown . definition star schema shown . define star schemas dimensions common, dimensions defined variables, avoid repeating definition later.","code":"dput(colnames(ft_cause_rpd)) #> c(\"Reception Year\", \"Reception Week\", \"Reception Date\", \"Data Availability Year\",  #> \"Data Availability Week\", \"Data Availability Date\", \"Year\", \"WEEK\",  #> \"Week Ending Date\", \"REGION\", \"State\", \"City\", \"Pneumonia and Influenza Deaths\",  #> \"All Deaths\", \"Other Deaths\") when <- dimension_schema(name = \"When\",                          attributes = c(\"Year\",                                         \"WEEK\",                                         \"Week Ending Date\")) when_available <- dimension_schema(   name = \"When Available\",   attributes = c(     \"Data Availability Year\",     \"Data Availability Week\",     \"Data Availability Date\"   ) ) where <- dimension_schema(name = \"where\",                           attributes = c(\"REGION\",                                          \"State\",                                          \"City\")) s <- star_schema() |>   define_facts(fact_schema(     name = \"MRS Cause\",     measures = c(\"Pneumonia and Influenza Deaths\",                  \"All Deaths\")   )) |>   define_dimension(when) |>   define_dimension(when_available) |>   define_dimension(dimension_schema(     name = \"When Received\",     attributes = c(\"Reception Year\",                    \"Reception Week\",                    \"Reception Date\")   )) |>   define_dimension(where)"},{"path":"https://josesamos.github.io/rolap/articles/rpd.html","id":"star-database","dir":"Articles","previous_headings":"A star database","what":"Star database","title":"Definition of Role-Playing and Role Dimensions","text":"star schema flat table, define star database, can seen . transformed snake case usually appropriate work RDBMS (Relational Database Management Systems). can seen tables associated dimension (, when_available, when_received) structure, although names attributes different come flat table field names repeated table. instances tables dimensions facts star database shown . observe dimensions (, when_available, when_received) set instances, exclusively necessary concept represent.","code":"db <- star_database(s, ft_cause_rpd) |>   snake_case()"},{"path":"https://josesamos.github.io/rolap/articles/rpd.html","id":"star-database-with-a-role-playing-dimension-and-role-dimensions","dir":"Articles","previous_headings":"A star database","what":"Star database with a role-playing dimension and role dimensions","title":"Definition of Role-Playing and Role Dimensions","text":"star database, can define one dimensions role-playing dimension dimensions various roles dimension. requirement dimensions must number attributes. definition shown . result can seen instances star database tables, . can see tables associated dimension contain instances fact table updated appropriately. example, field names preserved, surely may want tables field names, except surrogate key. can easily achieved indicating want names fields role-playing dimension indicating new names function. first alternative shown , using rpd_att_names parameter. case, schema displayed result since content tables . physical tables kept star database work RDBMS want work one physical table dimension, rest tables can easily defined views.","code":"db_1 <- db |>   role_playing_dimension(     rpd = \"when\",     roles = c(\"when_available\", \"when_received\")   ) db_2 <- db |>   role_playing_dimension(     rpd = \"when\",     roles = c(\"when_available\", \"when_received\"),     rpd_att_names = TRUE   )"},{"path":"https://josesamos.github.io/rolap/articles/rpd.html","id":"a-constellation","dir":"Articles","previous_headings":"","what":"A constellation","title":"Definition of Role-Playing and Role Dimensions","text":"several star databases can define constellation stars can share dimensions. Common dimensions must name structure. case role-playing dimensions role dimensions, must taken account since shared dimensions must transformed conformed dimensions, package takes care automatically, see .","code":""},{"path":"https://josesamos.github.io/rolap/articles/rpd.html","id":"second-star-database","dir":"Articles","previous_headings":"A constellation","what":"Second star database","title":"Definition of Role-Playing and Role Dimensions","text":"start similar dataset, dates added original dataset, shown . definition star schema shown . reused definitions Available dimensions previous schema. new dimension Arrived added different names order show definition works. definition star database shown . case, role-playing dimension role dimension defined. dimension included definition also show system works. tables new star database shown . can seen dimension independent, instances dimensions.","code":"dput(colnames(ft_age_rpd)) #> c(\"Arrival Year\", \"Arrival Week\", \"Arrival Date\", \"Data Availability Year\",  #> \"Data Availability Week\", \"Data Availability Date\", \"Year\", \"WEEK\",  #> \"Week Ending Date\", \"REGION\", \"State\", \"City\", \"Age Range\", \"Deaths\" #> ) s_2 <- star_schema() |>   define_facts(fact_schema(     name = \"MRS Age\",     measures = c(       \"Deaths\"     )   )) |>   define_dimension(when) |>   define_dimension(when_available) |>   define_dimension(dimension_schema(     name = \"When Arrived\",     attributes = c(       \"Arrival Year\",       \"Arrival Week\",       \"Arrival Date\"     )   )) |>   define_dimension(dimension_schema(     name = \"Who\",     attributes = c(       \"Age Range\"     )   )) |>   define_dimension(where) db_3 <- star_database(s_2, ft_age_rpd) |>   role_playing_dimension(     rpd = \"When Arrived\",     roles = c(\"When Available\"),     att_names = c(\"Year\", \"Week\", \"Week Ending Date\")   ) |>   snake_case()"},{"path":"https://josesamos.github.io/rolap/articles/rpd.html","id":"constellation","dir":"Articles","previous_headings":"A constellation","what":"Constellation","title":"Definition of Role-Playing and Role Dimensions","text":"definition constellation shown . can see graphic representation tables compose . situation dimension second star database independent dimensions, common dimension first star database: conformed dimension. instances tables better appreciate result. can see tables information related dimension instances, including instances star databases. example, dimension attributes renamed. definition role-playing dimension role dimensions updated integrating two star databases. can queried using following function. role-playing role dimensions share instances displayed.","code":"ct <- constellation(\"MRS\", list(db_2, db_3)) ct  |>   get_role_playing_dimension_names() #> $rpd_1 #> [1] \"when\"           \"when_arrived\"   \"when_available\" \"when_received\""},{"path":"https://josesamos.github.io/rolap/articles/rpd.html","id":"conclusions","dir":"Articles","previous_headings":"","what":"Conclusions","title":"Definition of Role-Playing and Role Dimensions","text":"rolap package supports definition role-playing role dimensions star databases. way, result can exported RDBMS can define dimensions independent tables views single physical table, need prefer. definition role-playing role dimensions propagated star databases constellations, allowing integrate various definitions common one.","code":""},{"path":"https://josesamos.github.io/rolap/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jose Samos. Author, maintainer, copyright holder.","code":""},{"path":"https://josesamos.github.io/rolap/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Samos J (2023). rolap: Obtaining Star Databases Flat Tables. https://josesamos.github.io/rolap/, https://github.com/josesamos/rolap.","code":"@Manual{,   title = {rolap: Obtaining Star Databases from Flat Tables},   author = {Jose Samos},   year = {2023},   note = {https://josesamos.github.io/rolap/, https://github.com/josesamos/rolap}, }"},{"path":"https://josesamos.github.io/rolap/index.html","id":"rolap-","dir":"","previous_headings":"","what":"Obtaining Star Databases from Flat Tables","title":"Obtaining Star Databases from Flat Tables","text":"aim multidimensional data model organize data supporting data analysis. Data multidimensional systems obtained operational systems transformed adapt new structure. Transformations can carried using professional ETL (Extract, Transform Load) tools. Recently, tools aimed end users emerged, also aimed performing transformation operations. tools useful carry transformation process, provide development environment define transformation operations general way. Frequently, operations performed aim transform flat table (data comes operational systems) ROLAP (Relational -Line Analytical Processing) star database, made fact dimension tables, implements multidimensional system. tools mentioned , transformation can carried , requires lot work. aware tools operations designed specifically support transformation process. goal rolap define transformations allow easily obtain ROLAP star databases, composed fact dimension tables, flat tables able export various formats used OLAP query tools. rolap package builds experience starschemar package based. currently incorporates main functionalities starschemar initially intended. particular, data model way treating role-playing role dimensions changed, easier add future extensions. designed way migration starschemar practically immediate.","code":""},{"path":"https://josesamos.github.io/rolap/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Obtaining Star Databases from Flat Tables","text":"can install released version rolap CRAN : development version GitHub :","code":"install.packages(\"rolap\") devtools::install_github(\"josesamos/rolap\")"},{"path":"https://josesamos.github.io/rolap/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Obtaining Star Databases from Flat Tables","text":"illustrate package works use small part Deaths 122 U.S. cities - 1962-2016. 122 Cities Mortality Reporting System data set form flat table, available package ft_num variable, shown .","code":""},{"path":"https://josesamos.github.io/rolap/index.html","id":"star-database-definition","dir":"","previous_headings":"Example","what":"Star database definition","title":"Obtaining Star Databases from Flat Tables","text":"transformation obtain star database flat table using rolap package follows: dimension fact schemas can defined variables () reused directly star schema definition. make easier work database environment transform table field names snake case. goal can exported tibble list. tables dimensions facts obtained star database shown .","code":"library(rolap)  where <- dimension_schema(name = \"Where\",                           attributes = c(\"REGION\",                                          \"State\",                                          \"City\"))  s <- star_schema() |>   define_facts(name = \"MRS Cause\",                measures = c(\"Pneumonia and Influenza Deaths\",                             \"All Deaths\")) |>   define_dimension(name = \"When\",                    attributes = c(\"Year\")) |>   define_dimension(where)  db <- star_database(s, ft_num) |>   snake_case() ls <- db |>   as_tibble_list()"},{"path":"https://josesamos.github.io/rolap/index.html","id":"constellation-definition","dir":"","previous_headings":"Example","what":"Constellation definition","title":"Obtaining Star Databases from Flat Tables","text":"can work several star databases form constellation. show example data integrated dimensions, let’s filter initial data. flat table obtained shown . Additionally, transform dataset tidy data filter . case, data set adequate treat data age. tidy flat table obtained shown . define star databases, one data relative causes age data. tables dimensions facts new db1 star database focused causes shown . tables star database age data, db2 database. filtered data, can seen dimension tables contain necessary data star database , common dimensions, share structure. Next define constellation formed two star databases. Constellation tables can also exported tibble list. tables constellation’s star databases. instances dimensions integrated tables common databases. tables can directly exported format required OLAP query tool going use.","code":"ft1 <- ft_num |>   dplyr::filter(Year > \"1962\") |>   dplyr::filter(City == \"Boston\" | City == \"Bridgeport\") ft2 <- ft_num |>   dplyr::select(-`Pneumonia and Influenza Deaths`, -`All Deaths`) |>   tidyr::gather(\"Age\", \"All Deaths\", 7:11) |>   dplyr::mutate(`All Deaths` = as.integer(`All Deaths`)) |>   dplyr::mutate(Age = stringr::str_replace(Age, \" \\\\(all cause deaths\\\\)\", \"\")) |>   dplyr::filter(Year < \"1964\") |>   dplyr::filter(City != \"Boston\" & City != \"Bridgeport\") |>   dplyr::filter(WEEK >= \"8\") when <- dimension_schema(name = \"When\",                          attributes = c(\"Year\"))  where <- dimension_schema(name = \"Where\",                           attributes = c(\"REGION\",                                          \"State\",                                          \"City\"))  s1 <- star_schema() |>   define_facts(name = \"MRS Cause\",                measures = c(\"Pneumonia and Influenza Deaths\",                             \"All Deaths\")) |>   define_dimension(when) |>   define_dimension(where)  db1 <- star_database(s1, ft1) |>   snake_case()  s2 <- star_schema() |>   define_facts(name = \"MRS Age\",                measures = c(\"All Deaths\")) |>   define_dimension(when) |>   define_dimension(where) |>   define_dimension(name = \"Who\",                          attributes = c(\"Age\"))  db2 <- star_database(s2, ft2) |>   snake_case() ct <- constellation(\"MRS\", list(db1, db2)) lc <- ct |>   as_tibble_list()"},{"path":"https://josesamos.github.io/rolap/index.html","id":"exportation-as-a-dm-object","dir":"","previous_headings":"Example","what":"Exportation as a dm object","title":"Obtaining Star Databases from Flat Tables","text":"Star databases constellations can directly exported objects class dm dm package, shown . example, dm class object can used represent tables store RDBMS.","code":"# star database db_dm <- db |>   as_dm_class() class(db_dm) #> [1] \"dm\" db_dm #> ── Metadata ──────────────────────────────────────────────────────────────────── #> Tables: `when`, `where`, `mrs_cause` #> Columns: 11 #> Primary keys: 3 #> Foreign keys: 2 # constellation ct_dm <- ct |>   as_dm_class() class(ct_dm) #> [1] \"dm\" ct_dm #> ── Metadata ──────────────────────────────────────────────────────────────────── #> Tables: `when`, `where`, `who`, `mrs_cause`, `mrs_age` #> Columns: 18 #> Primary keys: 5 #> Foreign keys: 5"},{"path":"https://josesamos.github.io/rolap/reference/add_surrogate_key.dimension_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the surrogate key from a dimension table to the instances table. — add_surrogate_key.dimension_table","title":"Add the surrogate key from a dimension table to the instances table. — add_surrogate_key.dimension_table","text":"Add surrogate key dimension table instances table.","code":""},{"path":"https://josesamos.github.io/rolap/reference/add_surrogate_key.dimension_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the surrogate key from a dimension table to the instances table. — add_surrogate_key.dimension_table","text":"","code":"# S3 method for dimension_table add_surrogate_key(dimension_table, instances)"},{"path":"https://josesamos.github.io/rolap/reference/add_surrogate_key.dimension_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the surrogate key from a dimension table to the instances table. — add_surrogate_key.dimension_table","text":"dimension_table dimension_table object. instances tibble, instances table.","code":""},{"path":"https://josesamos.github.io/rolap/reference/add_surrogate_key.dimension_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add the surrogate key from a dimension table to the instances table. — add_surrogate_key.dimension_table","text":"tibble.","code":""},{"path":"https://josesamos.github.io/rolap/reference/as_dm_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a dm class with fact and dimension tables — as_dm_class.constellation","title":"Generate a dm class with fact and dimension tables — as_dm_class.constellation","text":"port databases work environments useful able export dm class, function , way can saved directly DBMS.","code":""},{"path":"https://josesamos.github.io/rolap/reference/as_dm_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a dm class with fact and dimension tables — as_dm_class.constellation","text":"","code":"# S3 method for constellation as_dm_class(db, pk_facts = TRUE)  as_dm_class(db, pk_facts)  # S3 method for star_database as_dm_class(db, pk_facts = TRUE)"},{"path":"https://josesamos.github.io/rolap/reference/as_dm_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a dm class with fact and dimension tables — as_dm_class.constellation","text":"db star_database constellation object. pk_facts boolean, include primary key fact tables.","code":""},{"path":"https://josesamos.github.io/rolap/reference/as_dm_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a dm class with fact and dimension tables — as_dm_class.constellation","text":"dm object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/as_dm_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a dm class with fact and dimension tables — as_dm_class.constellation","text":"","code":"db1 <- star_database(mrs_cause_schema, ft_num) |>   snake_case() dm1 <- db1 |>   as_dm_class()  db2 <- star_database(mrs_age_schema, ft_age) |>   snake_case()  ct <- constellation(\"MRS\", list(db1, db2)) dm <- ct |>   as_dm_class()"},{"path":"https://josesamos.github.io/rolap/reference/as_dm_class_common.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a list of tibbles with fact and dimension tables — as_dm_class_common","title":"Generate a list of tibbles with fact and dimension tables — as_dm_class_common","text":"Generate list tibbles fact dimension tables","code":""},{"path":"https://josesamos.github.io/rolap/reference/as_dm_class_common.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a list of tibbles with fact and dimension tables — as_dm_class_common","text":"","code":"as_dm_class_common(dimensions, facts, pk_facts)"},{"path":"https://josesamos.github.io/rolap/reference/as_dm_class_common.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a list of tibbles with fact and dimension tables — as_dm_class_common","text":"dimensions list dimension tables. facts list fact tables. pk_facts boolean, include primary key fact tables.","code":""},{"path":"https://josesamos.github.io/rolap/reference/as_dm_class_common.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a list of tibbles with fact and dimension tables — as_dm_class_common","text":"dm object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/as_tibble_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a list of tibbles with fact and dimension tables — as_tibble_list.constellation","title":"Generate a list of tibbles with fact and dimension tables — as_tibble_list.constellation","text":"port databases work environments useful able export list tibbles, function .","code":""},{"path":"https://josesamos.github.io/rolap/reference/as_tibble_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a list of tibbles with fact and dimension tables — as_tibble_list.constellation","text":"","code":"# S3 method for constellation as_tibble_list(db)  as_tibble_list(db)  # S3 method for star_database as_tibble_list(db)"},{"path":"https://josesamos.github.io/rolap/reference/as_tibble_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a list of tibbles with fact and dimension tables — as_tibble_list.constellation","text":"db star_database constellation object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/as_tibble_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a list of tibbles with fact and dimension tables — as_tibble_list.constellation","text":"list tibble","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/as_tibble_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a list of tibbles with fact and dimension tables — as_tibble_list.constellation","text":"","code":"db1 <- star_database(mrs_cause_schema, ft_num) |>   snake_case() tl1 <- db1 |>   as_tibble_list()  db2 <- star_database(mrs_age_schema, ft_age) |>   snake_case()  ct <- constellation(\"MRS\", list(db1, db2)) tl <- ct |>   as_tibble_list()"},{"path":"https://josesamos.github.io/rolap/reference/as_tibble_list_common.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a list of tibbles with fact and dimension tables — as_tibble_list_common","title":"Generate a list of tibbles with fact and dimension tables — as_tibble_list_common","text":"Generate list tibbles fact dimension tables","code":""},{"path":"https://josesamos.github.io/rolap/reference/as_tibble_list_common.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a list of tibbles with fact and dimension tables — as_tibble_list_common","text":"","code":"as_tibble_list_common(dimensions, facts)"},{"path":"https://josesamos.github.io/rolap/reference/as_tibble_list_common.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a list of tibbles with fact and dimension tables — as_tibble_list_common","text":"dimensions list dimension tables. facts list fact tables.","code":""},{"path":"https://josesamos.github.io/rolap/reference/as_tibble_list_common.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a list of tibbles with fact and dimension tables — as_tibble_list_common","text":"list tibble objects.","code":""},{"path":"https://josesamos.github.io/rolap/reference/conform_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Conform dimensions — conform_dimensions","title":"Conform dimensions — conform_dimensions","text":"Generate dimension list dimensions schema.","code":""},{"path":"https://josesamos.github.io/rolap/reference/conform_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conform dimensions — conform_dimensions","text":"","code":"conform_dimensions(to_conform)"},{"path":"https://josesamos.github.io/rolap/reference/conform_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conform dimensions — conform_dimensions","text":"to_conform dimension_table object list.","code":""},{"path":"https://josesamos.github.io/rolap/reference/conform_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conform dimensions — conform_dimensions","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/constellation.html","id":null,"dir":"Reference","previous_headings":"","what":"constellation S3 class — constellation","title":"constellation S3 class — constellation","text":"Creates constellation object list star_database objects. dimensions name star schemas conformable (share structure, even though different instances).","code":""},{"path":"https://josesamos.github.io/rolap/reference/constellation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"constellation S3 class — constellation","text":"","code":"constellation(name = NULL, stars = NULL)"},{"path":"https://josesamos.github.io/rolap/reference/constellation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"constellation S3 class — constellation","text":"name string. stars list star_database objects.","code":""},{"path":"https://josesamos.github.io/rolap/reference/constellation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"constellation S3 class — constellation","text":"constellation object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/constellation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"constellation S3 class — constellation","text":"","code":"db1 <- star_database(mrs_cause_schema, ft_num) |>   snake_case() db2 <- star_database(mrs_age_schema, ft_age) |>   snake_case() ct1 <- constellation(\"MRS\", list(db1, db2))   db3 <- star_database(mrs_cause_schema_rpd, ft_cause_rpd) |>   role_playing_dimension(     rpd = \"When\",     roles = c(\"When Available\", \"When Received\")   )  db4 <- star_database(mrs_age_schema_rpd, ft_age_rpd) |>   role_playing_dimension(     rpd = \"When Arrived\",     roles = c(\"When Available\")   ) ct2 <- constellation(\"MRS\", list(db3, db4))"},{"path":"https://josesamos.github.io/rolap/reference/define_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Define dimension in a star_schema object. — define_dimension","title":"Define dimension in a star_schema object. — define_dimension","text":"Dimensions part star_schema object. can defined directly dimension_schema object giving name set attributes.","code":""},{"path":"https://josesamos.github.io/rolap/reference/define_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define dimension in a star_schema object. — define_dimension","text":"","code":"define_dimension(schema, dimension, name, attributes)  # S3 method for star_schema define_dimension(schema, dimension = NULL, name = NULL, attributes = NULL)"},{"path":"https://josesamos.github.io/rolap/reference/define_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define dimension in a star_schema object. — define_dimension","text":"schema star_schema object. dimension dimension_schema object. name string, name dimension. attributes vector attribute names.","code":""},{"path":"https://josesamos.github.io/rolap/reference/define_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define dimension in a star_schema object. — define_dimension","text":"star_schema object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/define_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define dimension in a star_schema object. — define_dimension","text":"","code":"s <- star_schema() |>   define_dimension(     name = \"when\",     attributes = c(       \"Week Ending Date\",       \"WEEK\",       \"Year\"     )   )  s <- star_schema() d <- dimension_schema(   name = \"when\",   attributes = c(     \"Week Ending Date\",     \"WEEK\",     \"Year\"   ) ) s <- s |>   define_dimension(d)"},{"path":"https://josesamos.github.io/rolap/reference/define_facts.html","id":null,"dir":"Reference","previous_headings":"","what":"Define facts in a star_schema object. — define_facts","title":"Define facts in a star_schema object. — define_facts","text":"Facts part star_schema object. can defined directly fact_schema object giving name set measures can empty (explicit measures).","code":""},{"path":"https://josesamos.github.io/rolap/reference/define_facts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define facts in a star_schema object. — define_facts","text":"","code":"define_facts(schema, facts, name, measures, agg_functions, nrow_agg)  # S3 method for star_schema define_facts(   schema,   facts = NULL,   name = NULL,   measures = NULL,   agg_functions = NULL,   nrow_agg = NULL )"},{"path":"https://josesamos.github.io/rolap/reference/define_facts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define facts in a star_schema object. — define_facts","text":"schema star_schema object. facts fact_schema object. name string, name fact. measures vector measure names. agg_functions vector aggregation function names, one corresponding measure. none indicated, default SUM. Additionally can MAX MIN. nrow_agg string, name new measure represents COUNT rows aggregated resulting row.","code":""},{"path":"https://josesamos.github.io/rolap/reference/define_facts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define facts in a star_schema object. — define_facts","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/define_facts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define facts in a star_schema object. — define_facts","text":"Associated measurement aggregation function can SUM, MAX MIN. AVG considered among possible aggregation functions: reason calculating AVG considering subsets data necessarily yield AVG total data. additional measurement corresponding COUNT aggregated rows added , together SUM, allows us obtain mean needed.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/define_facts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define facts in a star_schema object. — define_facts","text":"","code":"s <- star_schema() |>   define_facts(     name = \"mrs_cause\",     measures = c(       \"Pneumonia and Influenza Deaths\",       \"Other Deaths\"     )   )  s <- star_schema() f <- fact_schema(   name = \"mrs_cause\",   measures = c(     \"Pneumonia and Influenza Deaths\",     \"Other Deaths\"   ) ) s <- s |>   define_facts(f)"},{"path":"https://josesamos.github.io/rolap/reference/dimension_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"dimension_schema S3 class — dimension_schema","title":"dimension_schema S3 class — dimension_schema","text":"dimension_schema object created, define name set attributes make .","code":""},{"path":"https://josesamos.github.io/rolap/reference/dimension_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dimension_schema S3 class — dimension_schema","text":"","code":"dimension_schema(name = NULL, attributes = NULL)"},{"path":"https://josesamos.github.io/rolap/reference/dimension_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dimension_schema S3 class — dimension_schema","text":"name string, name dimension. attributes vector attribute names.","code":""},{"path":"https://josesamos.github.io/rolap/reference/dimension_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dimension_schema S3 class — dimension_schema","text":"dimension_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/dimension_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dimension_schema S3 class — dimension_schema","text":"dimension_schema object part star_schema object, defines dimension star schema.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/dimension_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"dimension_schema S3 class — dimension_schema","text":"","code":"d <- dimension_schema(   name = \"when\",   attributes = c(     \"Week Ending Date\",     \"WEEK\",     \"Year\"   ) )"},{"path":"https://josesamos.github.io/rolap/reference/dimension_table.html","id":null,"dir":"Reference","previous_headings":"","what":"dimension_table S3 class — dimension_table","title":"dimension_table S3 class — dimension_table","text":"dimension_table object created, define surrogate key.","code":""},{"path":"https://josesamos.github.io/rolap/reference/dimension_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dimension_table S3 class — dimension_table","text":"","code":"dimension_table(name = NULL, attributes = NULL, instances = NULL)"},{"path":"https://josesamos.github.io/rolap/reference/dimension_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dimension_table S3 class — dimension_table","text":"name string, dimension name. attributes vector strings, attributes names. instances flat table dimension instances.","code":""},{"path":"https://josesamos.github.io/rolap/reference/dimension_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dimension_table S3 class — dimension_table","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/fact_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"fact_schema S3 class — fact_schema","title":"fact_schema S3 class — fact_schema","text":"fact_schema object created, essential data name set measures can empty (explicit measures). part star_schema object, defines facts star schema.","code":""},{"path":"https://josesamos.github.io/rolap/reference/fact_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fact_schema S3 class — fact_schema","text":"","code":"fact_schema(   name = NULL,   measures = NULL,   agg_functions = NULL,   nrow_agg = NULL )"},{"path":"https://josesamos.github.io/rolap/reference/fact_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fact_schema S3 class — fact_schema","text":"name string, name fact. measures vector measure names. agg_functions vector aggregation function names, one corresponding measure. none indicated, default SUM. Additionally can MAX MIN. nrow_agg string, name new measure represents COUNT rows aggregated resulting row.","code":""},{"path":"https://josesamos.github.io/rolap/reference/fact_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fact_schema S3 class — fact_schema","text":"fact_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/fact_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fact_schema S3 class — fact_schema","text":"Associated measure aggregation function can SUM, MAX MIN. AVG considered among possible aggregation functions: reason calculating AVG considering subsets data necessarily yield AVG total data. additional measure corresponding COUNT aggregated rows added , together SUM, allows us obtain AVG needed.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/fact_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fact_schema S3 class — fact_schema","text":"","code":"f <- fact_schema(   name = \"mrs_cause\",   measures = c(     \"Pneumonia and Influenza Deaths\",     \"Other Deaths\"   ) )  f <- fact_schema(   name = \"mrs_cause\",   measures = c(     \"Pneumonia and Influenza Deaths\",     \"Other Deaths\"   ),   agg_functions = c(     \"MAX\",     \"SUM\"   ),   nrow_agg = \"Nrow\" )"},{"path":"https://josesamos.github.io/rolap/reference/fact_table.html","id":null,"dir":"Reference","previous_headings":"","what":"fact_table S3 class — fact_table","title":"fact_table S3 class — fact_table","text":"fact_table object created, get surrogate keys.","code":""},{"path":"https://josesamos.github.io/rolap/reference/fact_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fact_table S3 class — fact_table","text":"","code":"fact_table(   name = NULL,   surrogate_keys = NULL,   dim_int_names = NULL,   instances = NULL )"},{"path":"https://josesamos.github.io/rolap/reference/fact_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fact_table S3 class — fact_table","text":"name string, fact name. surrogate_keys vector strings, surrogate key names. dim_int_names vector strings, internal names dimensions. instances flat table fact instances.","code":""},{"path":"https://josesamos.github.io/rolap/reference/fact_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fact_table S3 class — fact_table","text":"fact_table object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System — ft","title":"Mortality Reporting System — ft","text":"Selection 20 rows 122 Cities Mortality Reporting System.","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System — ft","text":"","code":"ft"},{"path":"https://josesamos.github.io/rolap/reference/ft.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System — ft","text":"tibble.","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System — ft","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System — ft","text":"original dataset covers 1962 2016. week, 122 US cities, mortality figures age group cause, considered separately, included. cause, distinction made pneumonia influenza others.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/ft_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System by Age Group — ft_age","title":"Mortality Reporting System by Age Group — ft_age","text":"Selection data 122 Cities Mortality Reporting System age group.","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System by Age Group — ft_age","text":"","code":"ft_age"},{"path":"https://josesamos.github.io/rolap/reference/ft_age.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System by Age Group — ft_age","text":"tibble.","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft_age.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System by Age Group — ft_age","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft_age.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System by Age Group — ft_age","text":"original dataset covers 1962 2016. week, 122 US cities, mortality figures age group cause, considered separately, included.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/ft_age.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mortality Reporting System by Age Group — ft_age","text":"","code":"# The operations to obtain it from the `ft` data set are:  if (rlang::is_installed(\"stringr\")) {   ft_age <- ft |>     dplyr::select(-`Pneumonia and Influenza Deaths`, -`All Deaths`) |>     tidyr::gather(\"Age\", \"All Deaths\", 7:11) |>     dplyr::mutate(`All Deaths` = as.integer(`All Deaths`)) |>     dplyr::mutate(Age = stringr::str_replace(Age, \" \\\\(all cause deaths\\\\)\", \"\")) }"},{"path":"https://josesamos.github.io/rolap/reference/ft_age_rpd.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System by Age — ft_age_rpd","title":"Mortality Reporting System by Age — ft_age_rpd","text":"Selection data 122 Cities Mortality Reporting System age group, first 9 weeks 1962 4 cities.","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft_age_rpd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System by Age — ft_age_rpd","text":"","code":"ft_age_rpd"},{"path":"https://josesamos.github.io/rolap/reference/ft_age_rpd.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System by Age — ft_age_rpd","text":"tibble.","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft_age_rpd.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System by Age — ft_age_rpd","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft_age_rpd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System by Age — ft_age_rpd","text":"original dataset begins 1962. week, 122 US cities, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. Two additional dates generated, present original dataset.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/ft_cause_rpd.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System by Cause — ft_cause_rpd","title":"Mortality Reporting System by Cause — ft_cause_rpd","text":"Selection data 122 Cities Mortality Reporting System cause, first 9 weeks 1962 4 cities.","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft_cause_rpd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System by Cause — ft_cause_rpd","text":"","code":"ft_cause_rpd"},{"path":"https://josesamos.github.io/rolap/reference/ft_cause_rpd.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System by Cause — ft_cause_rpd","text":"tibble.","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft_cause_rpd.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System by Cause — ft_cause_rpd","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft_cause_rpd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System by Cause — ft_cause_rpd","text":"original dataset begins 1962. week, 122 US cities, mortality figures age group cause, considered separately, included (.e., combination age group cause included). cause, distinction made pneumonia influenza others. Two additional dates generated, present original dataset.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/ft_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Mortality Reporting System with numerical measures — ft_num","title":"Mortality Reporting System with numerical measures — ft_num","text":"Selection 20 rows 122 Cities Mortality Reporting System. Measures defined integer values.","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mortality Reporting System with numerical measures — ft_num","text":"","code":"ft_num"},{"path":"https://josesamos.github.io/rolap/reference/ft_num.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mortality Reporting System with numerical measures — ft_num","text":"tibble.","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft_num.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mortality Reporting System with numerical measures — ft_num","text":"https://catalog.data.gov/dataset/deaths--122-u-s-cities-1962-2016-122-cities-mortality-reporting-system","code":""},{"path":"https://josesamos.github.io/rolap/reference/ft_num.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mortality Reporting System with numerical measures — ft_num","text":"original dataset covers 1962 2016. week, 122 US cities, mortality figures age group cause, considered separately, included. cause, distinction made pneumonia influenza others.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/ft_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mortality Reporting System with numerical measures — ft_num","text":"","code":"# The operations to obtain it from the `ft` data set are:  ft_num <- ft |>   dplyr::mutate(`Pneumonia and Influenza Deaths` = as.integer(`Pneumonia and Influenza Deaths`)) |>   dplyr::mutate(`All Deaths` = as.integer(`All Deaths`))"},{"path":"https://josesamos.github.io/rolap/reference/get_agg_functions.fact_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Get aggregate functions — get_agg_functions.fact_schema","title":"Get aggregate functions — get_agg_functions.fact_schema","text":"Get aggregate functions","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_agg_functions.fact_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get aggregate functions — get_agg_functions.fact_schema","text":"","code":"# S3 method for fact_schema get_agg_functions(schema)"},{"path":"https://josesamos.github.io/rolap/reference/get_agg_functions.fact_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get aggregate functions — get_agg_functions.fact_schema","text":"schema fact_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_agg_functions.fact_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get aggregate functions — get_agg_functions.fact_schema","text":"vector strings.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_attribute_names.dimension_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Get attribute names — get_attribute_names.dimension_schema","title":"Get attribute names — get_attribute_names.dimension_schema","text":"Get names attributes defined dimension schema.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_attribute_names.dimension_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get attribute names — get_attribute_names.dimension_schema","text":"","code":"# S3 method for dimension_schema get_attribute_names(schema)"},{"path":"https://josesamos.github.io/rolap/reference/get_attribute_names.dimension_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get attribute names — get_attribute_names.dimension_schema","text":"schema dimension_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_attribute_names.dimension_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get attribute names — get_attribute_names.dimension_schema","text":"vector strings.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_attribute_names.star_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Get attribute names — get_attribute_names.star_schema","title":"Get attribute names — get_attribute_names.star_schema","text":"Get names attribute defined dimension schemas.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_attribute_names.star_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get attribute names — get_attribute_names.star_schema","text":"","code":"# S3 method for star_schema get_attribute_names(schema)"},{"path":"https://josesamos.github.io/rolap/reference/get_attribute_names.star_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get attribute names — get_attribute_names.star_schema","text":"schema star_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_attribute_names.star_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get attribute names — get_attribute_names.star_schema","text":"vector strings.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_dimension_attribute_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the names of the attributes of a dimension — get_dimension_attribute_names","title":"Get the names of the attributes of a dimension — get_dimension_attribute_names","text":"Obtain names attributes dimension.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_dimension_attribute_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the names of the attributes of a dimension — get_dimension_attribute_names","text":"","code":"get_dimension_attribute_names(db, name)  # S3 method for star_database get_dimension_attribute_names(db, name)"},{"path":"https://josesamos.github.io/rolap/reference/get_dimension_attribute_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the names of the attributes of a dimension — get_dimension_attribute_names","text":"db star_database object. name string, dimension name.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_dimension_attribute_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the names of the attributes of a dimension — get_dimension_attribute_names","text":"vector strings, attribute names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/get_dimension_attribute_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the names of the attributes of a dimension — get_dimension_attribute_names","text":"","code":"names <- star_database(mrs_cause_schema, ft_num) |>   get_dimension_attribute_names(name = \"where\")"},{"path":"https://josesamos.github.io/rolap/reference/get_dimension_name.dimension_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dimension name — get_dimension_name.dimension_schema","title":"Get dimension name — get_dimension_name.dimension_schema","text":"Get dimension name.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_dimension_name.dimension_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dimension name — get_dimension_name.dimension_schema","text":"","code":"# S3 method for dimension_schema get_dimension_name(schema)"},{"path":"https://josesamos.github.io/rolap/reference/get_dimension_name.dimension_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dimension name — get_dimension_name.dimension_schema","text":"schema dimension_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_dimension_name.dimension_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dimension name — get_dimension_name.dimension_schema","text":"string.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_fact_measure_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the names of the measures of a star database — get_fact_measure_names","title":"Get the names of the measures of a star database — get_fact_measure_names","text":"Obtain names measures star database.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_fact_measure_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the names of the measures of a star database — get_fact_measure_names","text":"","code":"get_fact_measure_names(db)  # S3 method for star_database get_fact_measure_names(db)"},{"path":"https://josesamos.github.io/rolap/reference/get_fact_measure_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the names of the measures of a star database — get_fact_measure_names","text":"db star_database object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_fact_measure_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the names of the measures of a star database — get_fact_measure_names","text":"vector strings, measure names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/get_fact_measure_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the names of the measures of a star database — get_fact_measure_names","text":"","code":"names <- star_database(mrs_cause_schema, ft_num) |>   get_fact_measure_names()"},{"path":"https://josesamos.github.io/rolap/reference/get_fact_name.fact_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Get fact name — get_fact_name.fact_schema","title":"Get fact name — get_fact_name.fact_schema","text":"Get fact name","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_fact_name.fact_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get fact name — get_fact_name.fact_schema","text":"","code":"# S3 method for fact_schema get_fact_name(schema)"},{"path":"https://josesamos.github.io/rolap/reference/get_fact_name.fact_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get fact name — get_fact_name.fact_schema","text":"schema fact_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_fact_name.fact_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get fact name — get_fact_name.fact_schema","text":"string.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_measure_names.fact_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Get measure names — get_measure_names.fact_schema","title":"Get measure names — get_measure_names.fact_schema","text":"Get names measures defined fact schema.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_measure_names.fact_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get measure names — get_measure_names.fact_schema","text":"","code":"# S3 method for fact_schema get_measure_names(schema)"},{"path":"https://josesamos.github.io/rolap/reference/get_measure_names.fact_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get measure names — get_measure_names.fact_schema","text":"schema fact_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_measure_names.fact_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get measure names — get_measure_names.fact_schema","text":"vector strings.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_measure_names.star_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Get measure names — get_measure_names.star_schema","title":"Get measure names — get_measure_names.star_schema","text":"Get names measures defined fact schema.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_measure_names.star_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get measure names — get_measure_names.star_schema","text":"","code":"# S3 method for star_schema get_measure_names(schema)"},{"path":"https://josesamos.github.io/rolap/reference/get_measure_names.star_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get measure names — get_measure_names.star_schema","text":"schema star_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_measure_names.star_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get measure names — get_measure_names.star_schema","text":"vector strings.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_nrow_agg.fact_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Get number of rows aggregate column — get_nrow_agg.fact_schema","title":"Get number of rows aggregate column — get_nrow_agg.fact_schema","text":"Get number rows aggregate column","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_nrow_agg.fact_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get number of rows aggregate column — get_nrow_agg.fact_schema","text":"","code":"# S3 method for fact_schema get_nrow_agg(schema)"},{"path":"https://josesamos.github.io/rolap/reference/get_nrow_agg.fact_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get number of rows aggregate column — get_nrow_agg.fact_schema","text":"schema fact_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_nrow_agg.fact_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get number of rows aggregate column — get_nrow_agg.fact_schema","text":"string.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_role_playing_dimension_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the names of the role playing dimensions — get_role_playing_dimension_names","title":"Get the names of the role playing dimensions — get_role_playing_dimension_names","text":"Role playing dimensions defined star_databases. integrating several star_databases form constellation, role playing dimensions also integrated. function allows see result.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_role_playing_dimension_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the names of the role playing dimensions — get_role_playing_dimension_names","text":"","code":"get_role_playing_dimension_names(db)  # S3 method for constellation get_role_playing_dimension_names(db)"},{"path":"https://josesamos.github.io/rolap/reference/get_role_playing_dimension_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the names of the role playing dimensions — get_role_playing_dimension_names","text":"db constellation object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_role_playing_dimension_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the names of the role playing dimensions — get_role_playing_dimension_names","text":"list vector strings dimension names.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/get_role_playing_dimension_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the names of the role playing dimensions — get_role_playing_dimension_names","text":"","code":"db1 <- star_database(mrs_cause_schema_rpd, ft_cause_rpd) |>   role_playing_dimension(     rpd = \"When\",     roles = c(\"When Available\", \"When Received\")   )  db2 <- star_database(mrs_age_schema_rpd, ft_age_rpd) |>   role_playing_dimension(     rpd = \"When Arrived\",     roles = c(\"When Available\")   ) rpd <- constellation(\"MRS\", list(db1, db2)) |>   get_role_playing_dimension_names()"},{"path":"https://josesamos.github.io/rolap/reference/get_surrogate_key.dimension_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Get surrogate key names — get_surrogate_key.dimension_table","title":"Get surrogate key names — get_surrogate_key.dimension_table","text":"Get names surrogate keys defined dimension table.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_surrogate_key.dimension_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get surrogate key names — get_surrogate_key.dimension_table","text":"","code":"# S3 method for dimension_table get_surrogate_key(dimension_table)"},{"path":"https://josesamos.github.io/rolap/reference/get_surrogate_key.dimension_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get surrogate key names — get_surrogate_key.dimension_table","text":"dimension_table dimension_table object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/get_surrogate_key.dimension_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get surrogate key names — get_surrogate_key.dimension_table","text":"vector strings.","code":""},{"path":"https://josesamos.github.io/rolap/reference/group_by_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Group instances by keys aggregating the measures using the corresponding\naggregation function. — group_by_keys","title":"Group instances by keys aggregating the measures using the corresponding\naggregation function. — group_by_keys","text":"Group instances keys aggregating measures using corresponding aggregation function.","code":""},{"path":"https://josesamos.github.io/rolap/reference/group_by_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group instances by keys aggregating the measures using the corresponding\naggregation function. — group_by_keys","text":"","code":"group_by_keys(instances, keys, measures, agg_functions, nrow_agg)"},{"path":"https://josesamos.github.io/rolap/reference/group_by_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group instances by keys aggregating the measures using the corresponding\naggregation function. — group_by_keys","text":"instances tibble, instances table. keys vector strings, key names group . measures vector strings, measures aggregate. agg_functions vector strings, aggregate functions. nrow_agg string, name new column count number rows aggregated.","code":""},{"path":"https://josesamos.github.io/rolap/reference/group_by_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group instances by keys aggregating the measures using the corresponding\naggregation function. — group_by_keys","text":"tibble.","code":""},{"path":"https://josesamos.github.io/rolap/reference/mrs_age_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Star schema for Mortality Reporting System by Age — mrs_age_schema","title":"Star schema for Mortality Reporting System by Age — mrs_age_schema","text":"Definition schemas facts dimensions Mortality Reporting System considering age classification.","code":""},{"path":"https://josesamos.github.io/rolap/reference/mrs_age_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star schema for Mortality Reporting System by Age — mrs_age_schema","text":"","code":"mrs_age_schema"},{"path":"https://josesamos.github.io/rolap/reference/mrs_age_schema.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star schema for Mortality Reporting System by Age — mrs_age_schema","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/mrs_age_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Star schema for Mortality Reporting System by Age — mrs_age_schema","text":"Dimension schemes can defined using variables repeat definition several multidimensional designs.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/mrs_age_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star schema for Mortality Reporting System by Age — mrs_age_schema","text":"","code":"# Defined by:  when <- dimension_schema(name = \"When\",                          attributes = c(\"Year\")) where <- dimension_schema(name = \"Where\",                           attributes = c(\"REGION\",                                          \"State\",                                          \"City\")) mrs_age_schema <- star_schema() |>   define_facts(name = \"MRS Age\",                measures = c(\"All Deaths\")) |>   define_dimension(when) |>   define_dimension(where) |>   define_dimension(name = \"Who\",                    attributes = c(\"Age\"))"},{"path":"https://josesamos.github.io/rolap/reference/mrs_age_schema_rpd.html","id":null,"dir":"Reference","previous_headings":"","what":"Star schema for Mortality Reporting System by Age with additional dates — mrs_age_schema_rpd","title":"Star schema for Mortality Reporting System by Age with additional dates — mrs_age_schema_rpd","text":"Definition schemas facts dimensions Mortality Reporting System considering cause classification additional dates used role playing dimensions..","code":""},{"path":"https://josesamos.github.io/rolap/reference/mrs_age_schema_rpd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star schema for Mortality Reporting System by Age with additional dates — mrs_age_schema_rpd","text":"","code":"mrs_age_schema_rpd"},{"path":"https://josesamos.github.io/rolap/reference/mrs_age_schema_rpd.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star schema for Mortality Reporting System by Age with additional dates — mrs_age_schema_rpd","text":"star_schema object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/mrs_age_schema_rpd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star schema for Mortality Reporting System by Age with additional dates — mrs_age_schema_rpd","text":"","code":"# Defined by:  mrs_age_schema_rpd <- star_schema() |>   define_facts(fact_schema(     name = \"mrs_age\",     measures = c(       \"Deaths\"     )   )) |>   define_dimension(dimension_schema(     name = \"When\",     attributes = c(       \"Year\",       \"WEEK\",       \"Week Ending Date\"     )   )) |>   define_dimension(dimension_schema(     name = \"When Available\",     attributes = c(       \"Data Availability Year\",       \"Data Availability Week\",       \"Data Availability Date\"     )   )) |>   define_dimension(dimension_schema(     name = \"When Arrived\",     attributes = c(       \"Arrival Year\",       \"Arrival Week\",       \"Arrival Date\"     )   )) |>   define_dimension(dimension_schema(     name = \"Who\",     attributes = c(       \"Age Range\"     )   )) |>   define_dimension(dimension_schema(     name = \"where\",     attributes = c(       \"REGION\",       \"State\",       \"City\"     )   ))"},{"path":"https://josesamos.github.io/rolap/reference/mrs_cause_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Star schema for Mortality Reporting System by Cause — mrs_cause_schema","title":"Star schema for Mortality Reporting System by Cause — mrs_cause_schema","text":"Definition schemas facts dimensions Mortality Reporting System considering cause classification.","code":""},{"path":"https://josesamos.github.io/rolap/reference/mrs_cause_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star schema for Mortality Reporting System by Cause — mrs_cause_schema","text":"","code":"mrs_cause_schema"},{"path":"https://josesamos.github.io/rolap/reference/mrs_cause_schema.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star schema for Mortality Reporting System by Cause — mrs_cause_schema","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/mrs_cause_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Star schema for Mortality Reporting System by Cause — mrs_cause_schema","text":"Dimension schemes can defined using variables repeat definition several multidimensional designs.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/mrs_cause_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star schema for Mortality Reporting System by Cause — mrs_cause_schema","text":"","code":"# Defined by:  when <- dimension_schema(name = \"When\",                          attributes = c(\"Year\")) where <- dimension_schema(name = \"Where\",                           attributes = c(\"REGION\",                                          \"State\",                                          \"City\")) mrs_cause_schema <- star_schema() |>   define_facts(name = \"MRS Cause\",                measures = c(\"Pneumonia and Influenza Deaths\",                             \"All Deaths\")) |>   define_dimension(when) |>   define_dimension(where)"},{"path":"https://josesamos.github.io/rolap/reference/mrs_cause_schema_rpd.html","id":null,"dir":"Reference","previous_headings":"","what":"Star schema for Mortality Reporting System by Cause with additional dates — mrs_cause_schema_rpd","title":"Star schema for Mortality Reporting System by Cause with additional dates — mrs_cause_schema_rpd","text":"Definition schemas facts dimensions Mortality Reporting System considering cause classification additional dates used role playing dimensions..","code":""},{"path":"https://josesamos.github.io/rolap/reference/mrs_cause_schema_rpd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star schema for Mortality Reporting System by Cause with additional dates — mrs_cause_schema_rpd","text":"","code":"mrs_cause_schema_rpd"},{"path":"https://josesamos.github.io/rolap/reference/mrs_cause_schema_rpd.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star schema for Mortality Reporting System by Cause with additional dates — mrs_cause_schema_rpd","text":"star_schema object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/mrs_cause_schema_rpd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Star schema for Mortality Reporting System by Cause with additional dates — mrs_cause_schema_rpd","text":"","code":"# Defined by:  mrs_cause_schema_rpd <- star_schema() |>   define_facts(fact_schema(     name = \"mrs_cause\",     measures = c(       \"Pneumonia and Influenza Deaths\",       \"All Deaths\"     )   )) |>   define_dimension(dimension_schema(     name = \"When\",     attributes = c(       \"Year\",       \"WEEK\",       \"Week Ending Date\"     )   )) |>   define_dimension(dimension_schema(     name = \"When Available\",     attributes = c(       \"Data Availability Year\",       \"Data Availability Week\",       \"Data Availability Date\"     )   )) |>   define_dimension(dimension_schema(     name = \"When Received\",     attributes = c(       \"Reception Year\",       \"Reception Week\",       \"Reception Date\"     )   )) |>   define_dimension(dimension_schema(     name = \"where\",     attributes = c(       \"REGION\",       \"State\",       \"City\"     )   ))"},{"path":"https://josesamos.github.io/rolap/reference/prepare_to_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform the instances table implemented by a tibble to join — prepare_to_join","title":"Transform the instances table implemented by a tibble to join — prepare_to_join","text":"Transform fields instances table character type replace NA values facilitate join operation.","code":""},{"path":"https://josesamos.github.io/rolap/reference/prepare_to_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform the instances table implemented by a tibble to join — prepare_to_join","text":"","code":"prepare_to_join(instances, unknown_value)"},{"path":"https://josesamos.github.io/rolap/reference/prepare_to_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform the instances table implemented by a tibble to join — prepare_to_join","text":"instances tibble, instances table. unknown_value string, value used replace NA values dimensions.","code":""},{"path":"https://josesamos.github.io/rolap/reference/prepare_to_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform the instances table implemented by a tibble to join — prepare_to_join","text":"tibble.","code":""},{"path":"https://josesamos.github.io/rolap/reference/role_playing_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a role playing dimension and its associated dimensions — role_playing_dimension","title":"Define a role playing dimension and its associated dimensions — role_playing_dimension","text":"dimension can play several roles relation facts. can define main dimension dimensions play different roles.","code":""},{"path":"https://josesamos.github.io/rolap/reference/role_playing_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a role playing dimension and its associated dimensions — role_playing_dimension","text":"","code":"role_playing_dimension(db, rpd, roles, rpd_att_names, att_names)  # S3 method for star_database role_playing_dimension(db, rpd, roles, rpd_att_names = FALSE, att_names = NULL)"},{"path":"https://josesamos.github.io/rolap/reference/role_playing_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a role playing dimension and its associated dimensions — role_playing_dimension","text":"db star_database object. rpd string, dimension name (role playing dimension). roles vector strings, dimension names (dimension roles). rpd_att_names boolean, common attribute names taken rpd dimension. att_names vector strings, common attribute names.","code":""},{"path":"https://josesamos.github.io/rolap/reference/role_playing_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a role playing dimension and its associated dimensions — role_playing_dimension","text":"star_database object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/role_playing_dimension.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define a role playing dimension and its associated dimensions — role_playing_dimension","text":"result, dimensions instances , deem necessary, also name attributes (except surrogate key).","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/role_playing_dimension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define a role playing dimension and its associated dimensions — role_playing_dimension","text":"","code":"s <- star_schema() |>   define_facts(fact_schema(     name = \"mrs_cause\",     measures = c(       \"Pneumonia and Influenza Deaths\",       \"All Deaths\"     )   )) |>   define_dimension(dimension_schema(     name = \"When\",     attributes = c(       \"Year\",       \"WEEK\",       \"Week Ending Date\"     )   )) |>   define_dimension(dimension_schema(     name = \"When Available\",     attributes = c(       \"Data Availability Year\",       \"Data Availability Week\",       \"Data Availability Date\"     )   )) |>   define_dimension(dimension_schema(     name = \"When Received\",     attributes = c(       \"Reception Year\",       \"Reception Week\",       \"Reception Date\"     )   )) |>   define_dimension(dimension_schema(     name = \"where\",     attributes = c(       \"REGION\",       \"State\",       \"City\"     )   ))  db <- star_database(s, ft_cause_rpd) |>   role_playing_dimension(     rpd = \"When\",     roles = c(\"When Available\", \"When Received\"),     rpd_att_names = TRUE   )  db <- star_database(s, ft_cause_rpd) |>   role_playing_dimension(\"When\",                          c(\"When Available\", \"When Received\"),                          att_names = c(\"Year\", \"Week\", \"Date\"))"},{"path":"https://josesamos.github.io/rolap/reference/rpd_in_constellation.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform role playing dimensions in constellation — rpd_in_constellation","title":"Transform role playing dimensions in constellation — rpd_in_constellation","text":"Transform role playing dimensions constellation","code":""},{"path":"https://josesamos.github.io/rolap/reference/rpd_in_constellation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform role playing dimensions in constellation — rpd_in_constellation","text":"","code":"rpd_in_constellation(db)  # S3 method for constellation rpd_in_constellation(db)"},{"path":"https://josesamos.github.io/rolap/reference/rpd_in_constellation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform role playing dimensions in constellation — rpd_in_constellation","text":"db constellation object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/rpd_in_constellation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform role playing dimensions in constellation — rpd_in_constellation","text":"constellation object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/set_dimension_attribute_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename the attributes of a dimension — set_dimension_attribute_names","title":"Rename the attributes of a dimension — set_dimension_attribute_names","text":"dimension attribute names match flat table defined. function allows change names.","code":""},{"path":"https://josesamos.github.io/rolap/reference/set_dimension_attribute_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename the attributes of a dimension — set_dimension_attribute_names","text":"","code":"set_dimension_attribute_names(db, name, attributes)  # S3 method for star_database set_dimension_attribute_names(db, name, attributes)"},{"path":"https://josesamos.github.io/rolap/reference/set_dimension_attribute_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename the attributes of a dimension — set_dimension_attribute_names","text":"db star_database object. name string, dimension name. attributes vector strings, attribute names.","code":""},{"path":"https://josesamos.github.io/rolap/reference/set_dimension_attribute_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename the attributes of a dimension — set_dimension_attribute_names","text":"star_database object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/set_dimension_attribute_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename the attributes of a dimension — set_dimension_attribute_names","text":"","code":"db <- star_database(mrs_cause_schema, ft_num) |>   set_dimension_attribute_names(     name = \"where\",     attributes = c(       \"Region\",       \"State\",       \"City\"     )   )"},{"path":"https://josesamos.github.io/rolap/reference/set_fact_measure_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename the measures of a star database — set_fact_measure_names","title":"Rename the measures of a star database — set_fact_measure_names","text":"measure names match flat table defined. function allows change names.","code":""},{"path":"https://josesamos.github.io/rolap/reference/set_fact_measure_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename the measures of a star database — set_fact_measure_names","text":"","code":"set_fact_measure_names(db, measures)  # S3 method for star_database set_fact_measure_names(db, measures)"},{"path":"https://josesamos.github.io/rolap/reference/set_fact_measure_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename the measures of a star database — set_fact_measure_names","text":"db star_database object. measures vector strings, measure names.","code":""},{"path":"https://josesamos.github.io/rolap/reference/set_fact_measure_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename the measures of a star database — set_fact_measure_names","text":"star_database object.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/set_fact_measure_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename the measures of a star database — set_fact_measure_names","text":"","code":"db <- star_database(mrs_cause_schema, ft_num) |>   set_fact_measure_names(     measures = c(       \"Pneumonia and Influenza\",       \"All\",       \"Rows Aggregated\"     )   )"},{"path":"https://josesamos.github.io/rolap/reference/share_dimensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Share the given dimensions in the database — share_dimensions","title":"Share the given dimensions in the database — share_dimensions","text":"Share given dimensions database","code":""},{"path":"https://josesamos.github.io/rolap/reference/share_dimensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Share the given dimensions in the database — share_dimensions","text":"","code":"share_dimensions(db, dims)"},{"path":"https://josesamos.github.io/rolap/reference/share_dimensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Share the given dimensions in the database — share_dimensions","text":"db star_database constellation object. dims Vector dimension names.","code":""},{"path":"https://josesamos.github.io/rolap/reference/share_dimensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Share the given dimensions in the database — share_dimensions","text":"star_database constellation object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/snake_case.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform names according to the snake case style — snake_case","title":"Transform names according to the snake case style — snake_case","text":"Transform fact, dimension, measures, attribute names according snake case style.","code":""},{"path":"https://josesamos.github.io/rolap/reference/snake_case.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform names according to the snake case style — snake_case","text":"","code":"snake_case(db)  # S3 method for star_database snake_case(db)"},{"path":"https://josesamos.github.io/rolap/reference/snake_case.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform names according to the snake case style — snake_case","text":"db star_database object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/snake_case.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform names according to the snake case style — snake_case","text":"star_database object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/snake_case.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform names according to the snake case style — snake_case","text":"style suitable going work databases.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/snake_case.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform names according to the snake case style — snake_case","text":"","code":"s <- star_schema() |>   define_facts(fact_schema(     name = \"mrs_cause\",     measures = c(       \"Pneumonia and Influenza Deaths\",       \"All Deaths\"     )   )) |>   define_dimension(dimension_schema(     name = \"when\",     attributes = c(       \"Year\"     )   )) |>   define_dimension(dimension_schema(     name = \"where\",     attributes = c(       \"REGION\",       \"State\",       \"City\"     )   ))  # ft_num contains instances db <- star_database(s, ft_num) |>   snake_case()"},{"path":"https://josesamos.github.io/rolap/reference/snake_case_table.dimension_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform names according to the snake case style — snake_case_table.dimension_table","title":"Transform names according to the snake case style — snake_case_table.dimension_table","text":"Transform names according snake case style","code":""},{"path":"https://josesamos.github.io/rolap/reference/snake_case_table.dimension_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform names according to the snake case style — snake_case_table.dimension_table","text":"","code":"# S3 method for dimension_table snake_case_table(table)"},{"path":"https://josesamos.github.io/rolap/reference/snake_case_table.dimension_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform names according to the snake case style — snake_case_table.dimension_table","text":"table dimension_table object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/snake_case_table.dimension_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform names according to the snake case style — snake_case_table.dimension_table","text":"dimension_table object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/snake_case_table.fact_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform names according to the snake case style — snake_case_table.fact_table","title":"Transform names according to the snake case style — snake_case_table.fact_table","text":"Transform names according snake case style","code":""},{"path":"https://josesamos.github.io/rolap/reference/snake_case_table.fact_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform names according to the snake case style — snake_case_table.fact_table","text":"","code":"# S3 method for fact_table snake_case_table(table)"},{"path":"https://josesamos.github.io/rolap/reference/snake_case_table.fact_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform names according to the snake case style — snake_case_table.fact_table","text":"table fact_table object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/snake_case_table.fact_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform names according to the snake case style — snake_case_table.fact_table","text":"fact_table object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/star_database.html","id":null,"dir":"Reference","previous_headings":"","what":"star_database S3 class — star_database","title":"star_database S3 class — star_database","text":"star_database object created star_schema object flat table contains data database instances derived.","code":""},{"path":"https://josesamos.github.io/rolap/reference/star_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"star_database S3 class — star_database","text":"","code":"star_database(schema, instances, unknown_value = NULL)"},{"path":"https://josesamos.github.io/rolap/reference/star_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"star_database S3 class — star_database","text":"schema star_schema object. instances flat table define database instances according schema. unknown_value string, value used replace NA values dimensions.","code":""},{"path":"https://josesamos.github.io/rolap/reference/star_database.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"star_database S3 class — star_database","text":"star_database object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/star_database.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"star_database S3 class — star_database","text":"Measures measures star_schema must correspond names columns flat table. Since NA values cause problems Join operations tables, can indicate value used replace operations. none indicated, default value taken.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/star_database.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"star_database S3 class — star_database","text":"","code":"db <- star_database(mrs_cause_schema, ft_num)"},{"path":"https://josesamos.github.io/rolap/reference/star_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"star_schema S3 class — star_schema","title":"star_schema S3 class — star_schema","text":"empty star_schema object created definition facts dimensions can added.","code":""},{"path":"https://josesamos.github.io/rolap/reference/star_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"star_schema S3 class — star_schema","text":"","code":"star_schema()"},{"path":"https://josesamos.github.io/rolap/reference/star_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"star_schema S3 class — star_schema","text":"star_schema object.","code":""},{"path":"https://josesamos.github.io/rolap/reference/star_schema.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"star_schema S3 class — star_schema","text":"get star database (star_database object) need flat table star_schema object. definition facts dimensions star_schema object made flat table columns.","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/reference/star_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"star_schema S3 class — star_schema","text":"","code":"s <- star_schema()"},{"path":"https://josesamos.github.io/rolap/reference/unify_rpd.html","id":null,"dir":"Reference","previous_headings":"","what":"Unify lists of dimension names if there are any in common — unify_rpd","title":"Unify lists of dimension names if there are any in common — unify_rpd","text":"Unify lists dimension names common","code":""},{"path":"https://josesamos.github.io/rolap/reference/unify_rpd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unify lists of dimension names if there are any in common — unify_rpd","text":"","code":"unify_rpd(rpd)"},{"path":"https://josesamos.github.io/rolap/reference/unify_rpd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unify lists of dimension names if there are any in common — unify_rpd","text":"rpd list strings (dimension names).","code":""},{"path":[]},{"path":"https://josesamos.github.io/rolap/news/index.html","id":"rolap-210","dir":"Changelog","previous_headings":"","what":"rolap 2.1.0","title":"rolap 2.1.0","text":"CRAN release: 2023-08-13 Definition role-playing role dimensions (explanatory vignette): role_playing_dimension() get_role_playing_dimension_names() functions. New functions query rename attributes dimensions measures facts: get_dimension_attribute_names(), set_dimension_attribute_names(), get_fact_measure_names() set_fact_measure_names(). Include detailed validation error messages.","code":""},{"path":"https://josesamos.github.io/rolap/news/index.html","id":"rolap-200","dir":"Changelog","previous_headings":"","what":"rolap 2.0.0","title":"rolap 2.0.0","text":"CRAN release: 2023-08-08 New version experience starschemar package. Initial functionality defining star databases constellations. Export data model RDBMS.","code":""}]
